##Vendor Performance Analysis üìà

This project performs a deep-dive analysis into vendor performance using inventory data. The goal is to move beyond simple sales metrics and identify which vendors are truly the most profitable and efficient partners for the business.

The analysis is conducted in two main stages, captured in two separate Jupyter Notebooks:
1.  `EDA.ipynb`: Data sourcing, cleaning, and preparation.
2.  `Vendor Performance Analysis.ipynb`: In-depth statistical analysis and hypothesis testing.

## üéØ Business Objective

The primary objective is to develop a data-driven framework for evaluating vendor performance. This helps the business to:

* **Optimize Procurement:** Identify and build stronger relationships with high-performing vendors.
* **Increase Profitability:** Focus on vendors that provide the best profit margins.
* **Improve Inventory Management:** Understand how vendor performance impacts stock turnover.

## ‚ùì Key Questions Addressed

This analysis seeks to answer several critical business questions:

* What are the most important Key Performance Indicators (KPIs) for evaluating our vendors?
* Who are our top and bottom-performing vendors based on profitability and sales efficiency?
* Is there a statistically significant difference in profit margins between our highest-selling and lowest-selling vendors?

## ‚öôÔ∏è The Analysis Pipeline

The project follows a systematic pipeline from raw data to actionable insights.

### 1. Data Sourcing & Preparation (`EDA.ipynb`)

First, we connect to the `inventory.db` SQLite database, which contains raw data across several tables (`sales`, `purchases`, `inventory`, etc.). To make sense of this raw data, we perform:

* **Data Aggregation:** We combine the various tables to create a single, powerful summary table: `vendor_sales_summary`.
* **Feature Engineering:** We create crucial new metrics to measure performance:
    * `ProfitMargin`: The percentage of revenue that is gross profit.
    * `StockTurnover`: The ratio of goods sold versus goods purchased.
    * `SalesPurchaseratio`: The ratio of sales dollars to purchase dollars.
* **Data Cleaning:** We handle inconsistencies and prepare the dataset for analysis.

### 2. Statistical Analysis & Insights (`Vendor Performance Analysis.ipynb`)

With a clean, feature-rich dataset, we move to the core analysis:

* **Exploratory Analysis (EDA):** We use visualizations like histograms and boxplots to understand the distribution of our key metrics and identify outliers.
* **Hypothesis Testing:** We conduct a **Two-Sample T-Test** to formally test if there is a real, statistically significant difference in the `ProfitMargin` between top-performing and low-performing vendors.

## üìä Key Findings

The final output of the analysis provides a clear, data-backed answer to our primary hypothesis. The conclusion of the t-test (found at the end of the `Vendor Performance Analysis.ipynb` notebook) determines whether we can be confident that a real performance gap exists between vendor groups.

This insight is crucial for making informed, strategic decisions about our vendor portfolio.

## üöÄ How to Use This Project

You can replicate this analysis by following these steps:

1.  **Clone the repository:**
    ```bash
    git clone <your-repo-url>
    cd <your-repo-name>
    ```

2.  **Install dependencies:**
    ```bash
    pip install pandas numpy matplotlib seaborn scipy
    ```

3.  **Run the notebooks in order:**
    * First, run `EDA.ipynb` from top to bottom to generate the cleaned `vendor_sales_summary` table.
    * Then, run `Vendor Performance Analysis.ipynb` to perform the final analysis and see the results.
